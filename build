#!/bin/bash -eu

CURDIR=$(realpath $(dirname $0))

ORG_PATH="github.com/sgotti"
REPO_PATH="${ORG_PATH}/baci"
                
if [ ! -h ${CURDIR}/gopath/src/${REPO_PATH} ]; then
        mkdir -p ${CURDIR}/gopath/src/${ORG_PATH}
        ln -s ../../../.. ${CURDIR}/gopath/src/${REPO_PATH} || exit 255
fi              
                        
export GOBIN=${CURDIR}/bin 
export GOPATH=${CURDIR}/gopath
                
eval $(go env)          

export GOBIN=${CURDIR}/bin

echo "Building sharedlibs helper..."
go build -i -o ${GOBIN}/sharedlibs ${REPO_PATH}/helpers/sharedlibs
RET=$?
[ $RET -ne 0 ] && echo "build failed" && exit 1

XZ=$(which xz)
if [ -n $XZ ]; then
	XZ_SHAREDLIBS=$(${GOBIN}/sharedlibs libs ${XZ})
	[ $RET -ne 0 ] && echo "cannot find sharedlibs for ${XZ}" && exit 1
	LDPATH=$(${GOBIN}/sharedlibs ldpath $XZ)
	[ $RET -ne 0 ] && echo "cannot find ldpath for ${XZ}" && exit 1
else
	echo "warning: cannot find xz binary, baci will not be able to extract tar.xz files"
fi

echo "Building bacibuilder..."
BACIBUILDER=${GOBIN}/bacibuilder
LDFLAGS="-X github.com/sgotti/baci/builder/util.ldpath ${LDPATH}"
# TODO(sgotti) not using 'go install' or 'go build -i' to avoid problems with
# "-installsuffix" that will rebuild std libraries and can give permission
# problems for go installation not owned by the current user (plus this will
# fill systems dirs with build files). This means the the build should be faster
# as, now, no object files are saved in the $GOPATH/pkg directory
CGO_ENABLED=0 go build -o ${BACIBUILDER} -installsuffix cgo -ldflags "${LDFLAGS} --extldflags \"-static -s\" " ${REPO_PATH}/builder/bacibuilder
RET=$?
[ $RET -ne 0 ] && echo "build failed" && exit 1

echo "Building baci..."
go build -i -o ${GOBIN}/baci ${BACI_IMAGE:+-ldflags "-X main.defaultBaciImage '${BACI_IMAGE}'"} ${REPO_PATH}/baci
RET=$?
[ $RET -ne 0 ] && echo "build failed" && exit 1


BACIACI=${CURDIR}/aci
BACIDIR=${BACIACI}/rootfs/baci
BACIROOT=${BACIDIR}/root

# clean baci.aci build dir
rm -rf ${BACIACI}

mkdir -p ${BACIDIR}/source
mkdir -p ${BACIDIR}/dest
mkdir -p ${BACIDIR}/data

mkdir -p ${BACIROOT}/usr/bin
mkdir -p ${BACIROOT}/lib

cp ${CURDIR}/manifest ${BACIACI}
cp ${BACIBUILDER} ${BACIROOT}/usr/bin

if [ -n $XZ ]; then
	cp $XZ ${BACIROOT}/usr/bin/
	for lib in ${XZ_SHAREDLIBS}; do
		cp $lib ${BACIROOT}/lib/
	done
	mkdir -p ${BACIROOT}/$(dirname ${LDPATH})
	cp $LDPATH ${BACIROOT}/$LDPATH
fi

echo "Building actool..."
ACTOOL=${GOBIN}/actool
go build -i -o ${ACTOOL} ${REPO_PATH}/Godeps/_workspace/src/github.com/appc/spec/actool

echo "Creating the baci's ACI..."
${ACTOOL} build --overwrite ${CURDIR}/aci ${GOBIN}/baci.aci


